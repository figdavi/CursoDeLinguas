/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.time.LocalDate;
import java.time.LocalTime;
import java.util.List;
import javax.swing.JOptionPane;
import java.util.logging.Logger;
import controller.ProfessorController;
import controller.TurmaController;
import controller.AulaController;

/**
 *
 * @author davis
 */
public class AulaView extends javax.swing.JFrame {
   
    private final ProfessorController professorController = new ProfessorController();
    private final TurmaController turmaController = new TurmaController();
    private final AulaController aulaController = new AulaController();
    private static final Logger logger = Logger.getLogger(AulaView.class.getName());

    /**
     * Creates new form AulaView
     */
    public AulaView() {
        initComponents();
        atualizarTabela();
        carregarProfessores();
        carregarTurmas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtData = new javax.swing.JTextField();
        cmbTurma = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtHoraInicio = new javax.swing.JTextField();
        txtHoraFim = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbProfessor = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaAulas = new javax.swing.JTable();
        btnCadastrar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnVoltar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID:");

        jLabel2.setText("Data:");

        cmbTurma.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Turma:");

        jLabel4.setText("Hora Fim:");

        jLabel5.setText("Hora In√≠cio:");

        txtHoraFim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoraFimActionPerformed(evt);
            }
        });

        jLabel6.setText("Professor:");

        cmbProfessor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tabelaAulas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaAulas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaAulasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaAulas);

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnVoltar1.setText("Voltar");
        btnVoltar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cmbProfessor, 0, 362, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1)
                        .addComponent(jLabel3)
                        .addComponent(txtId)
                        .addComponent(cmbTurma, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtData)
                        .addComponent(txtHoraInicio)
                        .addComponent(txtHoraFim))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnCadastrar)
                            .addGap(18, 18, 18)
                            .addComponent(btnAtualizar)
                            .addGap(18, 18, 18)
                            .addComponent(btnExcluir)
                            .addGap(18, 18, 18)
                            .addComponent(btnLimpar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnVoltar1))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(5, 5, 5)
                .addComponent(txtHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHoraFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar)
                    .addComponent(btnExcluir)
                    .addComponent(btnLimpar)
                    .addComponent(btnAtualizar)
                    .addComponent(btnVoltar1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtHoraFimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoraFimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoraFimActionPerformed

    private void tabelaAulasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAulasMouseClicked
        int linha = tabelaAulas.getSelectedRow();
        if (linha != -1) {
            txtId.setText(tabelaAulas.getValueAt(linha, 0).toString());
            txtData.setText(tabelaAulas.getValueAt(linha, 1).toString());
            txtHoraInicio.setText(tabelaAulas.getValueAt(linha, 2).toString());
            txtHoraFim.setText(tabelaAulas.getValueAt(linha, 3).toString());

            txtId.setEditable(false); // evita altera√ß√£o do ID
        }
    }//GEN-LAST:event_tabelaAulasMouseClicked

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        try {
            int id = Integer.parseInt(txtId.getText().trim());
            LocalDate data = LocalDate.parse(txtData.getText().trim());
            LocalTime horaInicio = LocalTime.parse(txtHoraInicio.getText().trim());
            LocalTime horaFim = LocalTime.parse(txtHoraFim.getText().trim());
            
            // Extrair professor selecionado
            model.Professor profSelecionado = (model.Professor) cmbProfessor.getSelectedItem();
            // Extrair turma selecionada
            model.Turma turmaSelecionada = (model.Turma) cmbTurma.getSelectedItem();

            aulaController.cadastrarAula(id, data, horaInicio, horaFim, turmaSelecionada, profSelecionado);

            atualizarTabela();
            limparCampos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar aula: " + e.getMessage());
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
    try {
        int id = Integer.parseInt(txtId.getText().trim());
        LocalDate data = LocalDate.parse(txtData.getText().trim());
        LocalTime horaInicio = LocalTime.parse(txtHoraInicio.getText().trim());
        LocalTime horaFim = LocalTime.parse(txtHoraFim.getText().trim());

        model.Professor profSelecionado = (model.Professor) cmbProfessor.getSelectedItem();
        model.Turma turmaSelecionada = (model.Turma) cmbTurma.getSelectedItem();

        aulaController.atualizarAula(id, data, horaInicio, horaFim, turmaSelecionada, profSelecionado);

        atualizarTabela();
        limparCampos();
        txtId.setEditable(true);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Erro ao atualizar aula: " + e.getMessage());
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int linha = tabelaAulas.getSelectedRow();
        if (linha != -1) {
            int id = (int) tabelaAulas.getValueAt(linha, 0);
            new dao.AulaDAO().excluir(id);
            atualizarTabela();
            limparCampos();
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma aula para excluir.");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnVoltar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltar1ActionPerformed
        dispose(); // Fecha a janela atual
    }//GEN-LAST:event_btnVoltar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new AulaView().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnVoltar1;
    private javax.swing.JComboBox cmbProfessor;
    private javax.swing.JComboBox cmbTurma;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabelaAulas;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtHoraFim;
    private javax.swing.JTextField txtHoraInicio;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables

    private void carregarProfessores() {
        List<model.Professor> professores = professorController.listarTodosProfessores();
        cmbProfessor.removeAllItems();
        for (model.Professor p : professores) {
            /* 
            Em Professor.java:
            @Override
            public String toString() { return matricula + " - " + nome;  }
            */
            cmbProfessor.addItem(p);
        }
    }

    private void carregarTurmas() {
        List<model.Turma> turmas = turmaController.listarTodasTurmas();
        cmbTurma.removeAllItems();
        for (model.Turma t : turmas) {
            /* 
            Em Turma.java:
            @Override
            public String toString() { return id + " - " + lingua + " (" + nivel + ")";  }
            */
            cmbTurma.addItem(t);
        }
    }
    
    private void atualizarTabela() {
        List<model.Aula> aulas = aulaController.listarTodasAulas();
        String[] colunas = { "ID", "Data", "Hora In√≠cio", "Hora Fim", "Turma", "Professor" };
        Object[][] dados = new Object[aulas.size()][6];

        for (int i = 0; i < aulas.size(); i++) {
            model.Aula a = aulas.get(i);
            dados[i][0] = a.getId();
            dados[i][1] = a.getData().toString();
            dados[i][2] = a.getHoraInicio().toString();
            dados[i][3] = a.getHoraFim().toString();
            dados[i][4] = a.getTurma() != null ? a.getTurma().getId() : "Sem turma";
            dados[i][5] = a.getProfessor() != null ? a.getProfessor().getNome() : "Sem professor";
        }

        tabelaAulas.setModel(new javax.swing.table.DefaultTableModel(dados, colunas));
    }
    
        private void limparCampos() {
        txtId.setText("");
        txtData.setText("");
        txtHoraInicio.setText("");
        txtHoraFim.setText("");
        cmbProfessor.setSelectedIndex(-1);
        cmbTurma.setSelectedIndex(-1);
        txtId.setEditable(true);
    }
}
