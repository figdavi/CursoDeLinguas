/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;
import controller.TurmaController;
import java.util.logging.Logger;
import model.Turma;
import model.Lingua;
import model.Turma.Nivel;

/**
 *
 * @author davis
 */
public class TurmaView extends javax.swing.JFrame {
    private final TurmaController turmaController = new TurmaController();
    private static final Logger logger = Logger.getLogger(TurmaView.class.getName());

    public TurmaView() {
        initComponents();
        comboLingua.removeAllItems();
        for (Lingua l : Lingua.values()) comboLingua.addItem(l);
        comboLingua.setSelectedIndex(-1);

        comboNivel.removeAllItems();
        for (Turma.Nivel n : Turma.Nivel.values()) comboNivel.addItem(n);
        comboNivel.setSelectedIndex(-1);

        atualizarTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbID = new javax.swing.JLabel();
        lbDataInicio = new javax.swing.JLabel();
        lbDataFim = new javax.swing.JLabel();
        lbLingua = new javax.swing.JLabel();
        lbNivel = new javax.swing.JLabel();
        lbPreco = new javax.swing.JLabel();
        txtPreco = new javax.swing.JTextField();
        txtDataFim = new javax.swing.JTextField();
        txtDataInicio = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        comboNivel = new javax.swing.JComboBox();
        btnCadastrar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaTurmas = new javax.swing.JTable();
        btnVoltar3 = new javax.swing.JButton();
        comboLingua = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbID.setText("ID:");

        lbDataInicio.setText("Data Início:");

        lbDataFim.setText("Data Fim:");

        lbLingua.setText("Língua:");

        lbNivel.setText("Nível:");

        lbPreco.setText("Preço:");

        txtDataFim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataFimActionPerformed(evt);
            }
        });

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        tabelaTurmas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaTurmas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaTurmasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaTurmas);

        btnVoltar3.setText("Voltar");
        btnVoltar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltar3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboNivel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbID)
                            .addComponent(lbPreco)
                            .addComponent(lbLingua)
                            .addComponent(txtPreco)
                            .addComponent(txtDataFim)
                            .addComponent(lbDataFim)
                            .addComponent(lbDataInicio)
                            .addComponent(txtDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbNivel)
                            .addComponent(comboLingua, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCadastrar)
                                .addGap(18, 18, 18)
                                .addComponent(btnAtualizar)
                                .addGap(18, 18, 18)
                                .addComponent(btnExcluir)
                                .addGap(18, 18, 18)
                                .addComponent(btnLimpar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnVoltar3))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lbID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbDataInicio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbDataFim)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(lbLingua)
                .addGap(12, 12, 12)
                .addComponent(comboLingua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbNivel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboNivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbPreco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar)
                    .addComponent(btnExcluir)
                    .addComponent(btnLimpar)
                    .addComponent(btnAtualizar)
                    .addComponent(btnVoltar3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtDataFimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataFimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataFimActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        try {
            int id = Integer.parseInt(txtId.getText().trim());
            Lingua lingua = (Lingua) comboLingua.getSelectedItem();
            Turma.Nivel nivel = (Turma.Nivel) comboNivel.getSelectedItem();
            double preco = Double.parseDouble(txtPreco.getText().trim());
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate inicio = LocalDate.parse(txtDataInicio.getText().trim(), formatter);
            LocalDate fim = LocalDate.parse(txtDataFim.getText().trim(), formatter);
            
            // Validação: data de início deve ser antes da data de fim
            if (!inicio.isBefore(fim)) {
                JOptionPane.showMessageDialog(this, "A data de início deve ser menor que a data de fim.");
                return;
            }
            
            String msg = turmaController.inserirTurma(id, inicio, fim, lingua, nivel, preco);
            JOptionPane.showMessageDialog(this, msg);
            if (msg.contains("sucesso")) {
                atualizarTabela();
                limparCampos();
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID ou Preço inválidos.");
        } catch (IllegalArgumentException e) {            
            JOptionPane.showMessageDialog(this, "Língua ou Nível inválidos! Use: " + Lingua.allToString() + " / " + Turma.Nivel.allToString());
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        try {
            int id = Integer.parseInt(txtId.getText().trim());
            Lingua lingua = (Lingua) comboLingua.getSelectedItem();
            Turma.Nivel nivel = (Turma.Nivel) comboNivel.getSelectedItem();
            double preco = Double.parseDouble(txtPreco.getText().trim());
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate inicio = LocalDate.parse(txtDataInicio.getText().trim(), formatter);
            LocalDate fim = LocalDate.parse(txtDataFim.getText().trim(), formatter);
            
            // Validação: data de início deve ser antes da data de fim
            if (!inicio.isBefore(fim)) {
                JOptionPane.showMessageDialog(this, "A data de início deve ser menor que a data de fim.");
                return;
            }

            String msg = turmaController.atualizarTurma(id, inicio, fim, lingua, nivel, preco);
            JOptionPane.showMessageDialog(this, msg);
            if (msg.contains("sucesso")) {
                atualizarTabela();
                limparCampos();
                txtId.setEditable(true);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID ou Preço inválidos.");
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, "Língua ou Nível inválidos! Use: " + Lingua.allToString() + " / " + Turma.Nivel.allToString());
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int linha = tabelaTurmas.getSelectedRow();
        if (linha != -1) {
            int id = Integer.parseInt(tabelaTurmas.getValueAt(linha, 0).toString());
            int confirm = JOptionPane.showConfirmDialog(this, "Deseja excluir a turma selecionada?",
                    "Confirmar Exclusão", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                String resultado = turmaController.excluirTurma(id);
                JOptionPane.showMessageDialog(this, resultado);
                if (resultado.contains("sucesso")) {
                    atualizarTabela();
                    limparCampos();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma turma para excluir.");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void tabelaTurmasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaTurmasMouseClicked
        int linha = tabelaTurmas.getSelectedRow();
        if (linha != -1) {
            txtId.setText(tabelaTurmas.getValueAt(linha, 0).toString());
            txtPreco.setText(tabelaTurmas.getValueAt(linha, 3).toString());
            txtDataInicio.setText(tabelaTurmas.getValueAt(linha, 4).toString());
            txtDataFim.setText(tabelaTurmas.getValueAt(linha, 5).toString());
            txtId.setEditable(false);
            
            // Seleciona corretamente a Lingua no ComboBox
            String linguaStr = tabelaTurmas.getValueAt(linha, 1).toString();
            for (int i = 0; i < comboLingua.getItemCount(); i++) {
                Lingua l = (Lingua) comboLingua.getItemAt(i);
                if (l.toString().equals(linguaStr)) {
                    comboLingua.setSelectedIndex(i);
                    break;
                }
            }
            
            // Seleciona corretamente o Nivel no ComboBox
            String nivelStr = tabelaTurmas.getValueAt(linha, 2).toString();
            for (int i = 0; i < comboNivel.getItemCount(); i++) {
                Nivel n = (Nivel) comboNivel.getItemAt(i);
                if (n.toString().equals(nivelStr)) {
                    comboNivel.setSelectedIndex(i);
                    break;
                }
            }
        }
    }//GEN-LAST:event_tabelaTurmasMouseClicked

    private void btnVoltar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltar3ActionPerformed
        this.dispose(); // Fecha a janela atual
    }//GEN-LAST:event_btnVoltar3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new TurmaView().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnVoltar3;
    private javax.swing.JComboBox comboLingua;
    private javax.swing.JComboBox comboNivel;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbDataFim;
    private javax.swing.JLabel lbDataInicio;
    private javax.swing.JLabel lbID;
    private javax.swing.JLabel lbLingua;
    private javax.swing.JLabel lbNivel;
    private javax.swing.JLabel lbPreco;
    private javax.swing.JTable tabelaTurmas;
    private javax.swing.JTextField txtDataFim;
    private javax.swing.JTextField txtDataInicio;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtPreco;
    // End of variables declaration//GEN-END:variables

    private void atualizarTabela() {
        List<Turma> turmas = turmaController.listarTodasTurmas();
        String[] colunas = { "ID", "Língua", "Nível", "Preço", "Início", "Fim" };
        Object[][] dados = new Object[turmas.size()][6];

        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");

        for (int i = 0; i < turmas.size(); i++) {
            Turma t = turmas.get(i);
            dados[i][0] = t.getId();
            dados[i][1] = t.getLingua();
            dados[i][2] = t.getNivel();
            dados[i][3] = t.getPreco();
            dados[i][4] = t.getDataInicio().format(formatter);
            dados[i][5] = t.getDataFim().format(formatter);
        }
        tabelaTurmas.setModel(new javax.swing.table.DefaultTableModel(dados, colunas));
    }
    
    private void limparCampos() {
        txtId.setText("");
        txtPreco.setText("");
        txtDataInicio.setText("");
        txtDataFim.setText("");
        comboLingua.setSelectedIndex(-1);
        comboNivel.setSelectedIndex(-1);
        txtId.setEditable(true);
    }
  
}
