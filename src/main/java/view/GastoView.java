/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.util.logging.Logger;
import controller.GastoController;
import controller.FuncionarioController;
import java.awt.HeadlessException;
import model.Funcionario;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author davis
 */
public class GastoView extends javax.swing.JFrame {
    private final GastoController gastoController = new GastoController();
    private final FuncionarioController funcionarioController = new FuncionarioController();
    private static final Logger logger = Logger.getLogger(GastoView.class.getName());

    /**
     * Creates new form GastoView
     */
    public GastoView() {
        initComponents();
        atualizarTabela();
        carregarFuncionarios();
        txtID.setEditable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtDescricao = new javax.swing.JTextField();
        txtValor = new javax.swing.JTextField();
        txtData = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        lbNome = new javax.swing.JLabel();
        lbEndereco = new javax.swing.JLabel();
        lbTelefone = new javax.swing.JLabel();
        lbMatricula = new javax.swing.JLabel();
        btnAtualizar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();
        scrollGastos = new javax.swing.JScrollPane();
        tabelaGastos = new javax.swing.JTable();
        btnVoltar1 = new javax.swing.JButton();
        cmbFuncionario = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbNome.setText("Descrição:");

        lbEndereco.setText("Valor:");

        lbTelefone.setText("Data:");

        lbMatricula.setText("ID:");

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        tabelaGastos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaGastos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaGastosMouseClicked(evt);
            }
        });
        scrollGastos.setViewportView(tabelaGastos);

        btnVoltar1.setText("Voltar");
        btnVoltar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltar1ActionPerformed(evt);
            }
        });

        cmbFuncionario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFuncionarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbMatricula)
                            .addComponent(lbEndereco)
                            .addComponent(lbNome)
                            .addComponent(lbTelefone)
                            .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                            .addComponent(txtDescricao)
                            .addComponent(txtValor)
                            .addComponent(txtData))
                        .addGap(35, 35, 35)
                        .addComponent(cmbFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnCadastrar)
                            .addGap(18, 18, 18)
                            .addComponent(btnAtualizar)
                            .addGap(18, 18, 18)
                            .addComponent(btnExcluir)
                            .addGap(18, 18, 18)
                            .addComponent(btnLimpar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnVoltar1))
                        .addComponent(scrollGastos, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lbMatricula)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbEndereco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbTelefone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar)
                    .addComponent(btnExcluir)
                    .addComponent(btnLimpar)
                    .addComponent(btnAtualizar)
                    .addComponent(btnVoltar1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollGastos, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        try {
            int id = Integer.parseInt(txtID.getText().trim());
            String descricao = txtDescricao.getText().trim();
            double valor = Double.parseDouble(txtValor.getText().trim());
            LocalDate data = LocalDate.parse(txtData.getText().trim(), DateTimeFormatter.ofPattern("dd/MM/yyyy"));

            String msg = gastoController.atualizarGasto(id, descricao, valor, data);
            JOptionPane.showMessageDialog(this, msg);
            if (msg.contains("sucesso")) {
                atualizarTabela();
                limparCampos();
                txtID.setEditable(true);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID ou valor inválido.");
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int linha = tabelaGastos.getSelectedRow();
        if (linha != -1) {
            int id = (int) tabelaGastos.getValueAt(linha, 0);
            int confirm = JOptionPane.showConfirmDialog(this, "Deseja excluir o gasto selecionado?", "Confirmar Exclusão", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                String msg = gastoController.excluirGasto(id);
                JOptionPane.showMessageDialog(this, msg);
                if (msg.contains("sucesso")) {
                    atualizarTabela();
                    limparCampos();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um gasto para excluir.");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        try {
            int id = Integer.parseInt(txtID.getText().trim());
            LocalDate data = LocalDate.parse(txtData.getText().trim(), DateTimeFormatter.ofPattern("dd/MM/yyyy"));

            Object obj = cmbFuncionario.getSelectedItem();

            // Se for pagamento de funcionário (combo preenchido com Funcionario)
            if (obj instanceof Funcionario funcionario) {
                String msg = gastoController.inserirPagamentoFuncionario(id, funcionario, data);
                JOptionPane.showMessageDialog(this, msg);
                if (msg.contains("sucesso")) {
                    atualizarTabela();
                    limparCampos();
                }
            } else {
                // Gasto manual
                String descricao = txtDescricao.getText().trim();
                double valor = Double.parseDouble(txtValor.getText().trim());

                String msg = gastoController.inserirGasto(id, descricao, valor, data);
                JOptionPane.showMessageDialog(this, msg);
                if (msg.contains("sucesso")) {
                    atualizarTabela();
                    limparCampos();
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID ou valor inválido.");
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar gasto: " + e.getMessage());
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void tabelaGastosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaGastosMouseClicked
        int linha = tabelaGastos.getSelectedRow();
        if (linha != -1) {
            String descricao = tabelaGastos.getValueAt(linha, 1).toString();
            txtID.setText(tabelaGastos.getValueAt(linha, 0).toString());
            txtDescricao.setText(descricao);
            txtValor.setText(tabelaGastos.getValueAt(linha, 2).toString());
            txtData.setText(tabelaGastos.getValueAt(linha, 3).toString());
            txtID.setEditable(false);

            // Bloqueia campos se for pagamento de funcionário
            boolean isPagamentoFuncionario = descricao.startsWith("Pagamento salário");
            txtDescricao.setEditable(!isPagamentoFuncionario);
            txtValor.setEditable(!isPagamentoFuncionario);

            cmbFuncionario.setEnabled(!isPagamentoFuncionario);
        }
    }//GEN-LAST:event_tabelaGastosMouseClicked

    private void btnVoltar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltar1ActionPerformed
        dispose(); // Fecha a janela atual
    }//GEN-LAST:event_btnVoltar1ActionPerformed

    private void cmbFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFuncionarioActionPerformed
        Object obj = cmbFuncionario.getSelectedItem();
        if (obj instanceof Funcionario funcionario) {
            txtDescricao.setText("Pagamento salário " + funcionario.toString());
            txtValor.setText(String.valueOf(funcionario.getSalario()));
        } else {
            txtDescricao.setText("");
            txtValor.setText("");
        }
    }//GEN-LAST:event_cmbFuncionarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new GastoView().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnVoltar1;
    private javax.swing.JComboBox cmbFuncionario;
    private javax.swing.JLabel lbEndereco;
    private javax.swing.JLabel lbMatricula;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbTelefone;
    private javax.swing.JScrollPane scrollGastos;
    private javax.swing.JTable tabelaGastos;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables

    private void atualizarTabela() {
        List<model.Gasto> gastos = gastoController.listarTodosGastos();
        String[] colunas = { "ID", "Descrição", "Valor", "Data" };
        Object[][] dados = new Object[gastos.size()][4];

        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");

        for (int i = 0; i < gastos.size(); i++) {
            model.Gasto g = gastos.get(i);
            dados[i][0] = g.getId();
            dados[i][1] = g.getDescricao();
            dados[i][2] = g.getValor();
            dados[i][3] = g.getData().format(formatter);
        }

        tabelaGastos.setModel(new javax.swing.table.DefaultTableModel(dados, colunas));
    }
    
    private void carregarFuncionarios() {
        List<Funcionario> funcionarios = funcionarioController.listarTodosFuncionarios();
        cmbFuncionario.removeAllItems();
        cmbFuncionario.addItem("Selecione o Funcionário");
        for (Funcionario f : funcionarios) {
            cmbFuncionario.addItem(f);
        }
    }

    private void limparCampos() {
        txtID.setText("");
        txtDescricao.setText("");
        txtValor.setText("");
        txtData.setText("");
        txtID.setEditable(true);
        txtDescricao.setEditable(true);
        txtValor.setEditable(true);
        cmbFuncionario.setEnabled(true);
        cmbFuncionario.setSelectedIndex(0);
    }
}
