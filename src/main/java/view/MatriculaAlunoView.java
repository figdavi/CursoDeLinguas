/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import dao.TurmaDAO;
import dao.AlunoDAO;
import model.Turma;
import model.Aluno;
import javax.swing.*;
import java.util.List;
import java.util.ArrayList;
import java.util.logging.Logger;

/**
 *
 * @author davis
 */
public class MatriculaAlunoView extends javax.swing.JFrame {
    private TurmaDAO turmaDAO = new TurmaDAO();
    private AlunoDAO alunoDAO = new AlunoDAO();
    private List<Aluno> alunosCache = new ArrayList<>();
    private List<Turma> turmasCache = new ArrayList<>();
    private static final Logger logger = Logger.getLogger(MatriculaAlunoView.class.getName());

    public MatriculaAlunoView() {
        setTitle("Matrícula de Aluno em Turma");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(600, 400);
        setLocationRelativeTo(null);
        initComponents();
        carregarAlunos();
        carregarTurmas();
        atualizarTabela();
        setVisible(true); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbAluno = new javax.swing.JComboBox<>();
        cmbTurma = new javax.swing.JComboBox<>();
        btnMatricular = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        scrollMatriculados = new javax.swing.JScrollPane();
        tabelaMatriculados = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmbAluno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbTurma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnMatricular.setText("Matricular");
        btnMatricular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMatricularActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        tabelaMatriculados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaMatriculados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMatriculadosClick(evt);
            }
        });
        scrollMatriculados.setViewportView(tabelaMatriculados);

        jLabel1.setText("Aluno:");

        jLabel2.setText("Turma:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnMatricular)
                                    .addGap(70, 70, 70)
                                    .addComponent(btnRemover))
                                .addComponent(cmbAluno, javax.swing.GroupLayout.Alignment.LEADING, 0, 419, Short.MAX_VALUE)
                                .addComponent(cmbTurma, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(scrollMatriculados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(315, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMatricular)
                            .addComponent(btnRemover))))
                .addGap(37, 37, 37)
                .addComponent(scrollMatriculados, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(321, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMatricularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMatricularActionPerformed
        int alunoIdx = cmbAluno.getSelectedIndex();
        int turmaIdx = cmbTurma.getSelectedIndex();
        if (alunoIdx == -1 || turmaIdx == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um aluno e uma turma.");
            return;
        }
        Aluno aluno = alunosCache.get(alunoIdx);
        Turma turma = turmasCache.get(turmaIdx);

        boolean ok = turmaDAO.matricularAluno(turma.getId(), aluno.getMatricula());
        if (ok) {
            JOptionPane.showMessageDialog(this, "Aluno matriculado com sucesso!");
            atualizarTabela();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao matricular aluno (já está matriculado?).");
        }
    }//GEN-LAST:event_btnMatricularActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        int turmaIdx = cmbTurma.getSelectedIndex();
        int linha = tabelaMatriculados.getSelectedRow();
        if (turmaIdx == -1 || linha == -1) {
            JOptionPane.showMessageDialog(this, "Selecione uma turma e um aluno da lista.");
            return;
        }
        Turma turma = turmasCache.get(turmaIdx);
        int matricula = (int) tabelaMatriculados.getValueAt(linha, 0);
        int confirm = JOptionPane.showConfirmDialog(this,
                "Deseja remover a matrícula do aluno selecionado?",
                "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            boolean ok = turmaDAO.desmatricularAluno(turma.getId(), matricula);
            if (ok) {
                JOptionPane.showMessageDialog(this, "Matrícula removida com sucesso!");
                atualizarTabela();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao remover matrícula.");
            }
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void tabelaMatriculadosClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMatriculadosClick
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaMatriculadosClick

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new MatriculaAlunoView().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMatricular;
    private javax.swing.JButton btnRemover;
    private javax.swing.JComboBox<String> cmbAluno;
    private javax.swing.JComboBox<String> cmbTurma;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane scrollMatriculados;
    private javax.swing.JTable tabelaMatriculados;
    // End of variables declaration//GEN-END:variables

    private void atualizarTabela() {
        int turmaIdx = cmbTurma.getSelectedIndex();
        if (turmaIdx == -1) {
            tabelaMatriculados.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {}, new String[] {"Matrícula", "Nome", "Telefone"}));
            return;
        }
        Turma turma = turmasCache.get(turmaIdx);
        List<Aluno> alunos = turmaDAO.listarAlunosMatriculados(turma.getId());
        String[] colunas = {"Matrícula", "Nome", "Telefone"};
        Object[][] dados = new Object[alunos.size()][3];

        for (int i = 0; i < alunos.size(); i++) {
            Aluno a = alunos.get(i);
            dados[i][0] = a.getMatricula();
            dados[i][1] = a.getNome();
            dados[i][2] = a.getTelefone();
        }
        tabelaMatriculados.setModel(new javax.swing.table.DefaultTableModel(dados, colunas));
    }
    
    private void carregarAlunos() {
        cmbAluno.removeAllItems();
        alunosCache = alunoDAO.listarTodos();
        for (Aluno a : alunosCache) {
            cmbAluno.addItem(a.getMatricula() + " - " + a.getNome());
        }
        cmbAluno.setSelectedIndex(-1);
    }
    
    private void carregarTurmas() {
        cmbTurma.removeAllItems();
        turmasCache = turmaDAO.listarTodos();
        for (Turma t : turmasCache) {
            cmbTurma.addItem(t.getId() + " - " + t.getLingua() + " (" + t.getNivel() + ")");
        }
        cmbTurma.setSelectedIndex(-1);
    }
}
